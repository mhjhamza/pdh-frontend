"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var isPlainObject=require("is-plain-object");function getObjectType(e){return"object"!==typeof e||null===e?0:Array.isArray(e)?2:isPlainObject.isPlainObject(e)?1:e instanceof Set?3:e instanceof Map?4:5}function getKeys(e){const t=new Set;for(const r of e)for(const e of[...Object.keys(r),...Object.getOwnPropertySymbols(r)])t.add(e);return t}function objectHasProperty(e,t){return"object"===typeof e&&Object.prototype.propertyIsEnumerable.call(e,t)}function getIterableOfIterables(e){return{*[Symbol.iterator](){for(const t of e)for(const e of t)yield e}}}const defaultMergeFunctions={mergeMaps:defaultMergeMaps,mergeSets:defaultMergeSets,mergeArrays:defaultMergeArrays,mergeRecords:defaultMergeRecords,mergeOthers:leaf},actions={defaultMerge:Symbol("deepmerge-ts: default merge"),skip:Symbol("deepmerge-ts: skip")};function defaultMetaDataUpdater(e,t){return t}function deepmerge(...e){return deepmergeCustom({})(...e)}function deepmergeCustom(e,t){const r=getUtils(e,n);function n(...e){return mergeUnknowns(e,r,t)}return n}function getUtils(e,t){var r,n;return{defaultMergeFunctions:defaultMergeFunctions,mergeFunctions:{...defaultMergeFunctions,...Object.fromEntries(Object.entries(e).filter((([e,t])=>Object.prototype.hasOwnProperty.call(defaultMergeFunctions,e))).map((([e,t])=>!1===t?[e,leaf]:[e,t])))},metaDataUpdater:null!==(r=e.metaDataUpdater)&&void 0!==r?r:defaultMetaDataUpdater,deepmerge:t,useImplicitDefaultMerging:null!==(n=e.enableImplicitDefaultMerging)&&void 0!==n&&n,actions:actions}}function mergeUnknowns(e,t,r){if(0===e.length)return;if(1===e.length)return mergeOthers(e,t,r);const n=getObjectType(e[0]);if(0!==n&&5!==n)for(let s=1;s<e.length;s++)if(getObjectType(e[s])!==n)return mergeOthers(e,t,r);switch(n){case 1:return mergeRecords(e,t,r);case 2:return mergeArrays(e,t,r);case 3:return mergeSets(e,t,r);case 4:return mergeMaps(e,t,r);default:return mergeOthers(e,t,r)}}function mergeRecords(e,t,r){const n=t.mergeFunctions.mergeRecords(e,t,r);return n===actions.defaultMerge||t.useImplicitDefaultMerging&&void 0===n&&t.mergeFunctions.mergeRecords!==t.defaultMergeFunctions.mergeRecords?t.defaultMergeFunctions.mergeRecords(e,t,r):n}function mergeArrays(e,t,r){const n=t.mergeFunctions.mergeArrays(e,t,r);return n===actions.defaultMerge||t.useImplicitDefaultMerging&&void 0===n&&t.mergeFunctions.mergeArrays!==t.defaultMergeFunctions.mergeArrays?t.defaultMergeFunctions.mergeArrays(e):n}function mergeSets(e,t,r){const n=t.mergeFunctions.mergeSets(e,t,r);return n===actions.defaultMerge||t.useImplicitDefaultMerging&&void 0===n&&t.mergeFunctions.mergeSets!==t.defaultMergeFunctions.mergeSets?t.defaultMergeFunctions.mergeSets(e):n}function mergeMaps(e,t,r){const n=t.mergeFunctions.mergeMaps(e,t,r);return n===actions.defaultMerge||t.useImplicitDefaultMerging&&void 0===n&&t.mergeFunctions.mergeMaps!==t.defaultMergeFunctions.mergeMaps?t.defaultMergeFunctions.mergeMaps(e):n}function mergeOthers(e,t,r){const n=t.mergeFunctions.mergeOthers(e,t,r);return n===actions.defaultMerge||t.useImplicitDefaultMerging&&void 0===n&&t.mergeFunctions.mergeOthers!==t.defaultMergeFunctions.mergeOthers?t.defaultMergeFunctions.mergeOthers(e):n}function defaultMergeRecords(e,t,r){const n={};for(const s of getKeys(e)){const o=[];for(const t of e)objectHasProperty(t,s)&&o.push(t[s]);const u=t.metaDataUpdater(r,{key:s,parents:e}),a=mergeUnknowns(o,t,u);a!==actions.skip&&("__proto__"===s?Object.defineProperty(n,s,{value:a,configurable:!0,enumerable:!0,writable:!0}):n[s]=a)}return n}function defaultMergeArrays(e){return e.flat()}function defaultMergeSets(e){return new Set(getIterableOfIterables(e))}function defaultMergeMaps(e){return new Map(getIterableOfIterables(e))}function leaf(e){return e[e.length-1]}exports.deepmerge=deepmerge,exports.deepmergeCustom=deepmergeCustom;